name: Deploy to VPS

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: List files
        run: |
          pwd
          ls -la
          test -d backend || (echo "backend/ not found" && exit 1)

      - name: Upload files to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          fingerprint: ${{ secrets.SSH_FINGERPRINT }}
          source: |
            backend
            compose.yml
            compose.dev.yml
            docs
            .gitignore
          target: /opt/kitchen
          overwrite: true
          rm: false
          strip_components: 0
          debug: true

      - name: Build & restart with Docker
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          fingerprint: ${{ secrets.SSH_FINGERPRINT }}
          script: |
            set -euo pipefail
            cd /opt/kitchen
            docker compose up -d --build

      - name: Migrate DB & health check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          fingerprint: ${{ secrets.SSH_FINGERPRINT }}
          script: |
            set -euo pipefail
            cd /opt/kitchen
            # ждём Postgres
            until docker compose exec -T db bash -lc 'pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h localhost'; do sleep 1; done
            # применяем миграции
            docker compose exec -T api alembic upgrade head || docker compose run --rm api alembic upgrade head
            # быстрый health-check API на сервере
            curl -fsS http://127.0.0.1:8000/docs >/dev/null && echo "API OK"
