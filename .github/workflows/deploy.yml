name: Deploy to VPS

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Sanity check
        run: |
          set -e
          pwd
          ls -la
          test -d backend || (echo "backend/ not found" && exit 1)
          test -f compose.yml || (echo "compose.yml not found" && exit 1)
          # эти два могут отсутствовать — не критично:
          test -f compose.dev.yml || echo "compose.dev.yml: not present (ok)"
          test -d docs || echo "docs/: not present (ok)"

      # Без архивов и удалений — просто синхронизируем нужные пути
      - name: Upload project to /opt/kitchen via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}       # как раньше, по ключу
          key: ${{ secrets.SSH_KEY }}
          fingerprint: ${{ secrets.SSH_FINGERPRINT }}
          # ВАЖНО: одна строка, через запятую, с префиксом ./
          source: "./backend/**,./docs/**,./compose.yml,./compose.dev.yml,./.gitignore"
          target: "/opt/kitchen"
          overwrite: true
          rm: false
          strip_components: 0
          debug: true
          # port: ${{ secrets.SSH_PORT }}          # раскомментируй, если не 22

      - name: Deploy on VPS (compose up + migrations + healthcheck)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          fingerprint: ${{ secrets.SSH_FINGERPRINT }}
          # port: ${{ secrets.SSH_PORT }}
          script: |
            set -euo pipefail

            cd /opt/kitchen

            # Если в прошлых прогонах что-то стало root'ом — мягко починим права
            if command -v sudo >/dev/null 2>&1; then
              sudo chown -R "$USER":"$USER" /opt/kitchen || true
            fi

            echo "→ docker compose pull (best effort)"
            docker compose pull || true

            echo "→ docker compose up -d --build"
            docker compose up -d --build

            echo "→ Wait for PostgreSQL"
            until docker compose exec -T db bash -lc 'pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h localhost'; do
              sleep 1
            done

            echo "→ Alembic migrations"
            docker compose exec -T api alembic upgrade head || docker compose run --rm api alembic upgrade head

            echo "→ Healthcheck API"
            curl -fsS http://127.0.0.1:8000/docs >/dev/null

            echo "✅ Deploy OK"
